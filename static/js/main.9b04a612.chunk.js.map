{"version":3,"sources":["components/Cards/Cards.module.css","components/Cards/Cards.jsx","api/index.js","components/Chart/Chart.jsx","components/CountryPicker/CountryPicker.jsx","App.js","index.js","App.module.css","components/Chart/Chart.module.css","components/CountryPicker/CountryPicker.module.css","images/image.png"],"names":["module","exports","Cards","data","confirmed","recovered","deaths","lastUpdate","mortailityRate","value","toFixed","recoveredRate","className","styles","container","Grid","spacing","justify","item","component","Card","xs","md","cx","card","infected","CardContent","Typography","color","gutterBottom","variant","start","end","duration","separator","Date","toLocaleString","url","fetchData","country","a","changeableUrl","axios","get","console","log","fetchDailyData","map","date","reportDate","total","fetchCountries","countries","name","Chart","useState","dailyData","setDailyData","useEffect","fetchAPI","lineChart","length","labels","datasets","label","borderColor","fill","backgroundColor","barChart","options","legend","display","title","text","CountryPicker","handleCountryChange","fetchedCountries","setFetchedCountries","FormControl","formControl","NativeSelect","defaultValue","onChange","e","target","idx","key","App","state","fetchedData","setState","this","image","src","coronaImage","alt","React","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.9b04a612.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Cards_container__3bjn6\",\"card\":\"Cards_card__eGUfZ\",\"infected\":\"Cards_infected__-adYp\",\"recovered\":\"Cards_recovered__1aizD\",\"deaths\":\"Cards_deaths__Qdjzq\"};","import React from 'react';\nimport { Card, CardContent, Typography, Grid} from \"@material-ui/core\";\nimport CountUp from 'react-countup';\nimport cx from 'classnames';\n\nimport styles from './Cards.module.css';\n\nconst Cards = ( {data: {confirmed, recovered, deaths, lastUpdate}}) => {\n    if(!confirmed) {\n        return \"Loading......\";\n    } \n    let mortailityRate = (deaths.value / confirmed.value * 100).toFixed(2);\n    let recoveredRate = (recovered.value / confirmed.value * 100).toFixed(2);\n    return (\n        <div className={styles.container}>\n            <Grid container spacing={3} justify='center'>\n                <Grid item component={Card} xs={12} md={3} className={cx(styles.card, styles.infected)}>\n                    <CardContent>\n                        <Typography color='textSecondary' gutterBottom>Infected</Typography>\n                        <Typography variant='h5'>\n                            <CountUp start={0} end={confirmed.value} duration={2.5} separator=','/>\n                        </Typography>\n                        <Typography color='textSecondary'>{new Date(lastUpdate).toLocaleString()}</Typography>\n                        <Typography variant='body2'>Number of active cases of COVID-19</Typography>\n                    </CardContent>\n                </Grid>\n                <Grid item component={Card} xs={12} md={3} className={cx(styles.card, styles.recovered)}>\n                    <CardContent>\n                        <Typography color='textSecondary' gutterBottom>Recovered</Typography>\n                        <Typography variant='h5'>\n                            <CountUp start={0} end={recovered.value} duration={2.5} separator=','/>\n                        </Typography>   \n                        <Typography variant='body2' color='textSecondary'>Recovered Rate: {recoveredRate}%</Typography>                     \n                        <Typography color='textSecondary'>{new Date(lastUpdate).toLocaleString()}</Typography>\n                        <Typography variant='body2'>Number of recovered cases of COVID-19</Typography>\n                    </CardContent>\n                </Grid>\n                <Grid item component={Card} xs={12} md={3} className={cx(styles.card, styles.deaths)}>\n                    <CardContent>\n                        <Typography color='textSecondary' gutterBottom>Deaths</Typography>\n                        <Typography variant='h5'>\n                            <CountUp start={0} end={deaths.value} duration={2.5} separator=','/>\n                        </Typography>     \n                        <Typography variant='body2' color='secondary'>Mortality Rate: {mortailityRate}%</Typography>\n                        <Typography color='textSecondary'>{new Date(lastUpdate).toLocaleString()}</Typography>\n                        <Typography variant='body2'>Number of deaths caused by COVID-19</Typography>\n                    </CardContent>\n                </Grid>\n            </Grid>\n        </div>\n    )\n}\n\nexport default Cards;\n","import axios from \"axios\";\n\nconst url = \"https://covid19.mathdro.id/api\";\n\nexport const fetchData = async (country) => {\n    let changeableUrl = url;\n\n    if(country) {\n        changeableUrl = `${url}/countries/${country}`;\n    }\n  try {\n    const { data: { confirmed, recovered, deaths, lastUpdate } } = await axios.get(changeableUrl);\n    console.log(lastUpdate)\n    return {\n      confirmed,\n      recovered,\n      deaths,\n      lastUpdate,\n    };\n  } catch (error) {\n      console.log(error);\n  }\n};\n\nexport const fetchDailyData = async () => {\n  try {\n    const { data } = await axios.get(`${url}/daily`);\n\n    return data.map(({ confirmed, deaths, reportDate: date }) => ({\n      confirmed: confirmed.total,\n      deaths: deaths.total,\n      date,\n    }));\n  } catch (error) {\n    return error;\n  }\n};\n\nexport const fetchCountries = async () => {\n  try {\n    const {\n      data: { countries },\n    } = await axios.get(`${url}/countries`);\n    return countries.map((country) => country.name);\n  } catch (error) {}\n};\n","import React, { useState, useEffect } from 'react';\nimport { fetchDailyData } from '../../api';\nimport { Line, Bar } from 'react-chartjs-2';\n\nimport styles from './Chart.module.css';\n\nconst Chart = ({data: {confirmed, recovered, deaths}, country}) => {\n    const [dailyData, setDailyData] = useState([]);\n\n    useEffect(() => {\n        const fetchAPI = async () => {\n            setDailyData(await fetchDailyData());\n        }\n\n        fetchAPI();\n    });\n\n    const lineChart = (\n        dailyData.length\n        ? (\n            <Line \n                data={{\n                    labels: dailyData.map(({date}) => date),\n                    datasets: [{\n                        data: dailyData.map(( { confirmed } ) => confirmed),\n                        label: \"Infected\",\n                        borderColor: '#3333ff',\n                        fill: true,\n                    }, {\n                        data: dailyData.map(( { deaths } ) => deaths),\n                        label: \"Deaths\",\n                        borderColor: 'red',\n                        backgroundColor: 'rgba(255, 0, 0, 0.5)',\n                        fill: true,\n                    }],\n                }}\n            />\n        ) : null\n    );\n\n\n    const barChart = (\n        confirmed\n        ? (\n            <Bar \n                data={{\n                    labels: ['Infected', 'Recovered', 'Deaths'],\n                    datasets: [{\n                        label: 'People',\n                        backgroundColor: [\n                            'rgba(0, 0, 255, 0.5)',\n                            'rgba(0, 255, 0, 0.5)',\n                            'rgba(255, 0, 0, 0.5)'\n                        ],\n                        data: [confirmed.value, recovered.value, deaths.value]\n                    }]\n                }}\n                options={{\n                    legend: { display: false },\n                    title: {display: true, text: `Current state in ${country}`},\n                }}\n            \n            />\n        ) : null\n    );\n    return (\n        <div className={styles.container}>\n            {country? barChart : lineChart}\n        </div>\n    )\n}\n\nexport default Chart;\n","import React, { useState, useEffect } from 'react';\nimport { NativeSelect, FormControl } from \"@material-ui/core\";\n\nimport styles from './CountryPicker.module.css';\nimport { fetchCountries } from '../../api';\n\nconst CountryPicker = ({handleCountryChange}) => {\n    const [fetchedCountries, setFetchedCountries] = useState([]);\n\n    useEffect(() => {\n        const fetchAPI = async () => {\n            setFetchedCountries(await fetchCountries());\n        }\n\n        fetchAPI();\n    }, [setFetchedCountries]);\n\n    return (\n        <FormControl className={styles.formControl}>\n            <NativeSelect defaultValue='' onChange={(e) => handleCountryChange(e.target.value)}>\n                <option value=\"\">Global</option>\n                {fetchedCountries.map((country, idx) => {\n                    return (\n                        <option key={idx} value={country}>{country}</option>\n                    )\n                })}\n            </NativeSelect>\n        </FormControl>\n    )\n}\n\nexport default CountryPicker;\n","import React from 'react';\n\nimport { Cards, Chart, CountryPicker }  from './components';\nimport styles from './App.module.css';\nimport { fetchData } from './api'; //no need to put /api/index since index will be searched automatically\nimport coronaImage from './images/image.png';\n\nclass App extends React.Component {\n    state = {\n        data: {},\n        country: '',\n    }\n    async componentDidMount() {\n        const fetchedData = await fetchData();\n\n        this.setState({data: fetchedData});\n    }\n\n    handleCountryChange = async (country) => {\n        const fetchedData = await fetchData(country);\n\n        this.setState({data: fetchedData, country: country});\n    }\n\n    render() {\n        const { data, country } = this.state;\n\n        return (\n            <div className={styles.container}>\n                <img className={styles.image} src={coronaImage} alt='COVID-19'/>\n                <Cards data={this.state.data}/>\n                <CountryPicker handleCountryChange={this.handleCountryChange}/>\n                <Chart data={data} country={country}/>\n        </div>\n        )\n    }\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__1MQN3\",\"image\":\"App_image__3byI1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Chart_container__1PIOn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"CountryPicker_formControl__2p8f9\"};","module.exports = __webpack_public_path__ + \"static/media/image.d7265326.png\";"],"sourceRoot":""}